/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestores;

import entidades.Lote;
import entidades.TipoSuelo;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import static javax.swing.JOptionPane.YES_OPTION;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcela
 */
public class RegistrarCampo extends javax.swing.JDialog {

    private GestorCampo gestorCampo;

    /**
     * Creates new form RegistrarCampo
     */
    public RegistrarCampo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public RegistrarCampo(java.awt.Frame parent, boolean modal, GestorCampo gestorCampo) {
        super(parent, modal);
        this.gestorCampo = gestorCampo;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCampo = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblSupCampo = new javax.swing.JLabel();
        txtSupCampo = new javax.swing.JTextField();
        lblHas = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        lblNombreUsuario = new javax.swing.JLabel();
        panelLotes = new javax.swing.JPanel();
        lblLotes = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblNroLote = new javax.swing.JLabel();
        txtNroLote = new javax.swing.JFormattedTextField();
        lblSupLote = new javax.swing.JLabel();
        txtSupLote = new javax.swing.JFormattedTextField();
        lblHasLote = new javax.swing.JLabel();
        lblTipoSuelo = new javax.swing.JLabel();
        cmbTipoSuelo = new javax.swing.JComboBox<>();
        btnAgregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLotes = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnRegistrarCampo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar campo");

        lblNombre.setText("Nombre");

        txtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreFocusLost(evt);
            }
        });

        lblSupCampo.setText("Superficie");

        txtSupCampo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSupCampoFocusLost(evt);
            }
        });

        lblHas.setText("has.");

        lblUsuario.setText("Usuario:");

        lblNombreUsuario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNombreUsuario.setText("Marcela");

        javax.swing.GroupLayout panelCampoLayout = new javax.swing.GroupLayout(panelCampo);
        panelCampo.setLayout(panelCampoLayout);
        panelCampoLayout.setHorizontalGroup(
            panelCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCampoLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNombre)
                    .addComponent(lblSupCampo))
                .addGap(38, 38, 38)
                .addGroup(panelCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCampoLayout.createSequentialGroup()
                        .addComponent(txtSupCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(lblHas))
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92)
                .addComponent(lblUsuario)
                .addGap(18, 18, 18)
                .addComponent(lblNombreUsuario)
                .addContainerGap(76, Short.MAX_VALUE))
        );
        panelCampoLayout.setVerticalGroup(
            panelCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCampoLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(panelCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsuario)
                    .addComponent(lblNombreUsuario))
                .addGap(18, 18, 18)
                .addGroup(panelCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSupCampo)
                    .addComponent(lblHas)
                    .addComponent(txtSupCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        panelLotes.setBackground(new java.awt.Color(168, 198, 186));

        lblLotes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblLotes.setText("Lotes");

        jLabel1.setText("(Debe ingresar al menos 1 lote)");

        lblNroLote.setText("Número");

        txtNroLote.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        lblSupLote.setText("Superficie");

        txtSupLote.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        lblHasLote.setText("has.");

        lblTipoSuelo.setText("Tipo de suelo");

        cmbTipoSuelo.setModel(new javax.swing.DefaultComboBoxModel(gestorCampo.getTiposSuelo().toArray()));

        btnAgregar.setText("Agregar lote");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        tblLotes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Número", "Superficie", "Tipo de suelo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblLotes);
        if (tblLotes.getColumnModel().getColumnCount() > 0) {
            tblLotes.getColumnModel().getColumn(0).setResizable(false);
            tblLotes.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblLotes.getColumnModel().getColumn(1).setResizable(false);
            tblLotes.getColumnModel().getColumn(1).setPreferredWidth(50);
            tblLotes.getColumnModel().getColumn(2).setResizable(false);
            tblLotes.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnQuitar.setText("Quitar");
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLotesLayout = new javax.swing.GroupLayout(panelLotes);
        panelLotes.setLayout(panelLotesLayout);
        panelLotesLayout.setHorizontalGroup(
            panelLotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLotesLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(panelLotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNroLote)
                    .addComponent(lblSupLote)
                    .addComponent(lblTipoSuelo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbTipoSuelo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar)
                    .addGroup(panelLotesLayout.createSequentialGroup()
                        .addGroup(panelLotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNroLote, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(txtSupLote))
                        .addGap(18, 18, 18)
                        .addComponent(lblHasLote)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelLotesLayout.createSequentialGroup()
                .addGroup(panelLotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLotesLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lblLotes))
                    .addGroup(panelLotesLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1))
                    .addGroup(panelLotesLayout.createSequentialGroup()
                        .addGap(499, 499, 499)
                        .addComponent(btnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnQuitar)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        panelLotesLayout.setVerticalGroup(
            panelLotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLotesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLotesLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelLotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEditar)
                            .addComponent(btnQuitar)))
                    .addGroup(panelLotesLayout.createSequentialGroup()
                        .addComponent(lblLotes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addGroup(panelLotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNroLote)
                            .addComponent(txtNroLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(panelLotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSupLote)
                            .addComponent(lblHasLote)
                            .addComponent(txtSupLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTipoSuelo)
                            .addComponent(cmbTipoSuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregar)
                        .addGap(0, 33, Short.MAX_VALUE)))
                .addContainerGap())
        );

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnRegistrarCampo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRegistrarCampo.setText("Registrar campo");
        btnRegistrarCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarCampoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(btnRegistrarCampo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelLotes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelCampo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelLotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnRegistrarCampo))
                .addGap(27, 27, 27))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusLost
        String nombre = txtNombre.getText();
        
        // Escribió nombre del campo?
        if (!nombre.equals("")) {   
            // Completar nombre en el objeto campo
            gestorCampo.setNombreCampo(nombre);
            
            // Si ya existe, mostrar error 
            if (!gestorCampo.validarNombre(nombre)) {
                JOptionPane.showMessageDialog(this, "El nombre ya existe", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtNombreFocusLost

    private boolean validarDatosLote() {
        return true;
    }

    private void mostrarLotes() {
        // Modelo de la tabla detalle (acá inserto las filas)
        DefaultTableModel modelo = (DefaultTableModel) this.tblLotes.getModel();

        // borro las filas de la tabla
        modelo.setRowCount(0);

        // cada fila es un array de 3 objetos
        Object[] fila;
        fila = new Object[3];

        // Mostrar el detalle de este pedido en la tabla de abajo
        for (Lote lote : gestorCampo.getCampo().getLotes()) {
            fila[0] = lote.getNroLote();
            fila[1] = lote.getSuperficie();
            fila[2] = lote.getTipoSuelo().toString();

            // agrego la fila a la tabla
            modelo.addRow(fila);
        }
    }

    private void limpiarDatosLote() {
        // Vaciar campos
        txtNroLote.setText("");
        txtSupLote.setText("");

        // Dejar el cursor en nro de lote
        txtNroLote.requestFocus();
    }

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // Validar datos completos
        if (validarDatosLote()) {

            // Datos en pantalla
            int nro = ((Number) txtNroLote.getValue()).intValue();
            double sup = ((Number) txtSupLote.getValue()).doubleValue();
            TipoSuelo tipo = (TipoSuelo) cmbTipoSuelo.getModel().getSelectedItem();

            // Crear objeto lote y agregarlo al campo
            Lote lote = new Lote(gestorCampo.getCampo(), nro, sup, tipo);
            this.gestorCampo.agregarLote(lote);

            // Mostrar en la tabla
            this.mostrarLotes();

            // Limpiar campos para seguir cargando lotes
            this.limpiarDatosLote();

        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // Fila seleccionada
        int fila = tblLotes.getSelectedRow();

        // Editar ese lote

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        // Fila seleccionada
        int index = tblLotes.getSelectedRow();

        if (index >= 0) {

            // Pedir confirmación
            if (JOptionPane.showConfirmDialog(this, "Desea borrar el lote seleccionado?", "Confirmación", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

                // Borrar lote seleccionado
                gestorCampo.borrarLoteEnPosicion(index);

                // Refresh de la tabla
                this.mostrarLotes();
            }
        }
    }//GEN-LAST:event_btnQuitarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // Fin caso de uso
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnRegistrarCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarCampoActionPerformed
        // Verificar datos
        if (this.verificarDatos()) {
            
            // Pedir confirmación
            if (JOptionPane.showConfirmDialog(this, "Confirma el registro del campo?", "Registrar campo", YES_NO_OPTION) == YES_OPTION) {
                
                // Pedirle al gestor que guarde este campo
                this.gestorCampo.guardarCampo();
            
                // Informar
                JOptionPane.showMessageDialog(null, 
                    "Nombre    : " + gestorCampo.getCampo().getNombre()+"\n"+
                    "Superficie: " + gestorCampo.getCampo().getSuperficie()+"\n"+
                    "Cant lotes: " + gestorCampo.getCampo().getLotes().size()+"\n"+
                    "Estado    : " + gestorCampo.getCampo().getEstadoCampo().getNombre(), "Nombre", INFORMATION_MESSAGE);
            
        
                // Limpiar pantalla para regitrar otro
                this.limpiarDatosCampo();
                this.limpiarDatosLote();
                this.vaciarTabla();
            }
        }
    }//GEN-LAST:event_btnRegistrarCampoActionPerformed

    private boolean verificarDatos() {
        // Escribió nombre del campo?
        if (txtNombre.getText().equals("")) {   
            JOptionPane.showMessageDialog(this, "Debe escribir un nombre", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Completó la superficie?
        if (txtSupCampo.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe completar la superficie", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } 
        
        // Verificar que hay al menos un lote
        if (this.gestorCampo.cantidadDeLotes() == 0) {
            JOptionPane.showMessageDialog(this, "Debe agregar por lo menos un lote", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Verificar que la sup del campo es la suma de todos los lotes
        if (!gestorCampo.superficieCorrecta()) {
            JOptionPane.showMessageDialog(this, "La superficie del campo no coincide con la suma de los lotes", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Todo ok
        return true;
    }
    
    private void limpiarDatosCampo() {
        txtNombre.setText("");
        txtSupCampo.setText("");
    }
    
    private void vaciarTabla() {
        // Modelo de la tabla lotes
        DefaultTableModel modelo = (DefaultTableModel) this.tblLotes.getModel();

        // borro las filas de la tabla
        modelo.setRowCount(0);    
    }
    
    private void txtSupCampoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSupCampoFocusLost
        // Completar superficie en el objeto campo
        if (!txtSupCampo.getText().equals("")) {
            try {
              double superficie = Double.parseDouble(txtSupCampo.getText());
              gestorCampo.setSuperficieCampo(superficie);
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(this, "La superficie del campo no es un valor correcto", "Error", JOptionPane.ERROR);            }
        }
    }//GEN-LAST:event_txtSupCampoFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarCampo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarCampo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarCampo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarCampo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RegistrarCampo dialog = new RegistrarCampo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JButton btnRegistrarCampo;
    private javax.swing.JComboBox<String> cmbTipoSuelo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHas;
    private javax.swing.JLabel lblHasLote;
    private javax.swing.JLabel lblLotes;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombreUsuario;
    private javax.swing.JLabel lblNroLote;
    private javax.swing.JLabel lblSupCampo;
    private javax.swing.JLabel lblSupLote;
    private javax.swing.JLabel lblTipoSuelo;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JPanel panelCampo;
    private javax.swing.JPanel panelLotes;
    private javax.swing.JTable tblLotes;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JFormattedTextField txtNroLote;
    private javax.swing.JTextField txtSupCampo;
    private javax.swing.JFormattedTextField txtSupLote;
    // End of variables declaration//GEN-END:variables
}
